[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "ptm"
version = "0.1.0"
description = "A portable test environment matrix generator for python packages."
readme = "README.md"
requires-python = ">=3.8"
authors = [
  {name = "Brian Kohan", email = "bckohan@gmail.com"}
]
dependencies = [
    "packaging>=24.2",
    "requests>=2.32.3",
    "tomlkit>=0.13.2",
    "typer>=0.15.2",
]
license = "MIT"
license-files = [ "LICENSE" ]
keywords = [
    "python", "test", "testing", "matrix", "strategy", "uv",
    "venv", "environment", "virtualenvironment", "portable"
]
classifiers = [
    "Environment :: Console",
    "Framework :: Django",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Testing",
    "Topic :: Utilities"
]

[project.scripts]
ptm = "ptm.cli:app"

[tool.hatch.build.targets.wheel]
packages = ["src/ptm"]


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
norecursedirs = "*.egg .eggs dist build docs .tox .git __pycache__"
addopts = [
    "--strict-markers",
    "--cov"
]

[tool.coverage.run]
source = ["ptm"]
omit = ["*/tests/*"]
branch = true
relative_files = true

[tool.coverage.report]
show_missing = true
skip_covered = true


[tool.ptm]
driver = "uv"
dot_dir = ".test_matrix"
groups = ["dev", "django"]  # by default dev group is included in all environments, set to [] to exclude
extras = []

[tool.ptm.set_env]
DJANGO_SETTINGS_MODULE = "tests.settings"
RDBMS = "sqlite"

[tool.ptm.aliases]
dj_main = "git+https://github.com/django/django.git@main#egg=Django"

[tool.ptm.env.sqlite]
tags = []
matrix = [
  # run exhaustive python/django version permutations in default env (sqlite)
  {python = "3.8", django = "3.2", strategy="lowest"},
  {python = ["3.8", "3.9"], django = ["3.2", "4.0", "4.1", "4.2"]},
  {python = ["3.10"], django = ["3.2", "4.0", "4.1", "4.2", "5.0", "5.1", "5.2b1"]},
  {python = ["3.11"], django = ["4.1", "4.2", "5.0", "5.1", "5.2b1"]},
  {python = ["3.12"], django = ["4.2", "5.0", "5.1", "5.2b1"]},
  {python = ["3.13"], django = ["5.1", "5.2b1"]},
  {python = ["3.13"], django = "dj_main"},
]

[tool.ptm.env.postgres]
tags = []
setenv = {RDBMS="postgres"}
matrix = [
  {python = ["3.8"],  django = ["3.2"], groups=["psycopg2"], strategy="lowest", env={postgres="9.6"}},
  {python = ["3.10"], django = ["4.2"], psycopg2="2.9", groups=["psycopg2"], env={postgres="12"}},
  {python = ["3.10"], django = ["4.2"], psycopg="3.1", groups=["psycopg3"], env={postgres="13"}},
  {python = ["3.12"], django = ["5.1"], psycopg="3.2", groups=["psycopg3"], env={postgres="14"}},
  {python = ["3.13"], django = ["5.21b", "main"], groups=["psycopg3"], env={postgres="latest"}},
]

# [tool.ptm.env]
# oracle = "https://django-commons.org/matrix/oracle.toml"

[dependency-groups]
dev = [
    "ipdb>=0.13.13",
    "mypy>=1.14.1",
    "pre-commit>=3.5.0",
    "ruff>=0.9.9",
    "types-requests>=2.32.0.20241016",
]
django = ["django>=3.2,<6.0"]
docs = [
    "doc8>=1.1.2",
    "furo>=2024.8.6",
    "readme-renderer[md]>=43.0",
    "sphinx>=7.1.2",
    "sphinxcontrib-typer>=0.2.1",
]
psycopg2 = ["psycopg2>=2.5.4"] # for django > 3.2 needs 2.8.4
psycopg3 = ["psycopg>=3.1.8"]  # django > 4.2

[tool.doc8]
max-line-length = 100
sphinx = true


[tool.ruff]
line-length = 88
exclude = [
    "doc",
    "dist",
    "examples",
    "plot_benchmarks.py"
]

[tool.ruff.lint]
exclude = ["tests/**/*"]
